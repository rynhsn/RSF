<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="M001" xml:space="preserve">
    <value>Are you sure you want to process selected Invoice(s)?</value>
  </data>
  <data name="M002" xml:space="preserve">
    <value>No Agreement or LOI for this unit found!</value>
  </data>
  <data name="M003" xml:space="preserve">
    <value>Form Program is not found!</value>
  </data>
  <data name="V001" xml:space="preserve">
    <value>Please select Property !</value>
  </data>
  <data name="V002" xml:space="preserve">
    <value>Please select Building !</value>
  </data>
  <data name="_ActualEndDt" xml:space="preserve">
    <value>Actual End Dt</value>
  </data>
  <data name="_ActualStartDt" xml:space="preserve">
    <value>Actual Start Dt</value>
  </data>
  <data name="_Agreement" xml:space="preserve">
    <value>Agreement</value>
  </data>
  <data name="_AgreementNo" xml:space="preserve">
    <value>Agreement No</value>
  </data>
  <data name="_AgreementStatus" xml:space="preserve">
    <value>Agreement Status</value>
  </data>
  <data name="_AllBuilding" xml:space="preserve">
    <value>All Building</value>
  </data>
  <data name="_Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="_Building" xml:space="preserve">
    <value>Building</value>
  </data>
  <data name="_CallDate" xml:space="preserve">
    <value>Call Date</value>
  </data>
  <data name="_CallNo" xml:space="preserve">
    <value>Call No</value>
  </data>
  <data name="_CallStatus" xml:space="preserve">
    <value>Call Status</value>
  </data>
  <data name="_Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="_CF" xml:space="preserve">
    <value>CF</value>
  </data>
  <data name="_CommonArea" xml:space="preserve">
    <value>Common Area</value>
  </data>
  <data name="_Department" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="_DocumentStatus" xml:space="preserve">
    <value>Document Status</value>
  </data>
  <data name="_DrillDown" xml:space="preserve">
    <value>Drill Down</value>
  </data>
  <data name="_EndDate" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="_ExpDays" xml:space="preserve">
    <value>Exp Days</value>
  </data>
  <data name="_Floor" xml:space="preserve">
    <value>Floor</value>
  </data>
  <data name="_FloorID" xml:space="preserve">
    <value>Floor ID</value>
  </data>
  <data name="_FromFloor" xml:space="preserve">
    <value>From Floor</value>
  </data>
  <data name="_LastInvoiceNo" xml:space="preserve">
    <value>Last Invoice No</value>
  </data>
  <data name="_LastInvoicePrd" xml:space="preserve">
    <value>Last Invoice Prd</value>
  </data>
  <data name="_MeterNo" xml:space="preserve">
    <value>Meter No</value>
  </data>
  <data name="_OccupiableArea" xml:space="preserve">
    <value>Occupiable Area</value>
  </data>
  <data name="_Option" xml:space="preserve">
    <value>Option</value>
  </data>
  <data name="_PlanEndDt" xml:space="preserve">
    <value>Plan End Dt</value>
  </data>
  <data name="_PlanStartDt" xml:space="preserve">
    <value>Plan Start Dt</value>
  </data>
  <data name="_Property" xml:space="preserve">
    <value>Property</value>
  </data>
  <data name="_ReferenceNo" xml:space="preserve">
    <value>Reference No</value>
  </data>
  <data name="_Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="_Remaining" xml:space="preserve">
    <value>Remaining</value>
  </data>
  <data name="_SeqNo" xml:space="preserve">
    <value>Seq No</value>
  </data>
  <data name="_StartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="_Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="_TabStripUtility" xml:space="preserve">
    <value>Utility</value>
  </data>
  <data name="_TabStripFacility" xml:space="preserve">
    <value>Facility</value>
  </data>
  <data name="_Tenant" xml:space="preserve">
    <value>Tenant</value>
  </data>
  <data name="_ToFloor" xml:space="preserve">
    <value>To Floor</value>
  </data>
  <data name="_TransCode" xml:space="preserve">
    <value>Trans. Code</value>
  </data>
  <data name="_Unit" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="_UnitCategory" xml:space="preserve">
    <value>Unit Category</value>
  </data>
  <data name="_UnitDescription" xml:space="preserve">
    <value>Unit Description</value>
  </data>
  <data name="_UnitID" xml:space="preserve">
    <value>Unit ID</value>
  </data>
  <data name="_UnitStatus" xml:space="preserve">
    <value>Unit Status</value>
  </data>
  <data name="_UnitType" xml:space="preserve">
    <value>Unit Type</value>
  </data>
  <data name="_UtilityType" xml:space="preserve">
    <value>Utility Type</value>
  </data>
  <data name="_Year" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="_FaciType" xml:space="preserve">
    <value>Facility Type</value>
  </data>
  <data name="_FaciUsed" xml:space="preserve">
    <value>Used</value>
  </data>
  <data name="_FaciLimit" xml:space="preserve">
    <value>Limit</value>
  </data>
  <data name="_Hochecklist" xml:space="preserve">
    <value>Handover Checklist</value>
  </data>
  <data name="_Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="_Ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="_NotOK" xml:space="preserve">
    <value>Not OK</value>
  </data>
  <data name="_NoData" xml:space="preserve">
    <value>No Data</value>
  </data>
  <data name="_col_HandoverDate" xml:space="preserve">
    <value>Handover Date</value>
  </data>
  <data name="_col_ForcedHO" xml:space="preserve">
    <value>Forced HO</value>
  </data>
</root>