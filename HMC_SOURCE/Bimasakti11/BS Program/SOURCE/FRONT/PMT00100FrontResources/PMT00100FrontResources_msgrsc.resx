<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MessageDelete" xml:space="preserve">
    <value>Delete Success</value>
  </data>
  <data name="ValidationActualPrice" xml:space="preserve">
    <value>Actual Price Cannot be less than 0!</value>
  </data>
  <data name="ValidationBeforeCancel" xml:space="preserve">
    <value>You haven’t saved your changes. Are you sure want to cancel?</value>
    <comment>You haven’t saved your changes. Are you sure want to cancel?</comment>
  </data>
  <data name="ValidationBillingRule" xml:space="preserve">
    <value>Please fill Billing Rule Code!</value>
  </data>
  <data name="ValidationBookingFee" xml:space="preserve">
    <value>Booking Fee Cannot be less than 0!</value>
  </data>
  <data name="ValidationBuilding" xml:space="preserve">
    <value>Please fill Building ID!</value>
  </data>
  <data name="ValidationCurrency" xml:space="preserve">
    <value>Please fill  Currency Id!</value>
  </data>
  <data name="ValidationDepartment" xml:space="preserve">
    <value>Please fill Department ID!</value>
    <comment>Please fill Call Department ID!</comment>
  </data>
  <data name="ValidationFloor" xml:space="preserve">
    <value>Please fill Floor ID!</value>
  </data>
  <data name="ValidationPlanHoDate" xml:space="preserve">
    <value>Please fill Plan HO Date!</value>
  </data>
  <data name="ValidationSalesman" xml:space="preserve">
    <value>Please fill Salesman ID!</value>
  </data>
  <data name="ValidationTax" xml:space="preserve">
    <value>Please fill Tax Id!</value>
  </data>
  <data name="ValidationTenant" xml:space="preserve">
    <value>Please fill Tenant ID!</value>
  </data>
  <data name="ValidationUnit" xml:space="preserve">
    <value>Please fill Unit ID!</value>
  </data>
  <data name="_ActualPrice" xml:space="preserve">
    <value>Actual Price</value>
  </data>
  <data name="_ActualSize" xml:space="preserve">
    <value>Actual Prize</value>
    <comment>Actual Prize</comment>
  </data>
  <data name="_BillingRule" xml:space="preserve">
    <value>Billing Rule</value>
  </data>
  <data name="_Booking" xml:space="preserve">
    <value>Booking</value>
  </data>
  <data name="_BookingFee" xml:space="preserve">
    <value>Booking Fee</value>
  </data>
  <data name="_Bookingfeea" xml:space="preserve">
    <value />
  </data>
  <data name="_Building" xml:space="preserve">
    <value>Building</value>
  </data>
  <data name="_BuildingName" xml:space="preserve">
    <value>Building Name</value>
  </data>
  <data name="_CFloorName" xml:space="preserve">
    <value>Floor</value>
  </data>
  <data name="_ChangeUnit" xml:space="preserve">
    <value>Change Unit</value>
  </data>
  <data name="_ConfirmationRedraft" xml:space="preserve">
    <value>Are you sure want to  redraft this data?</value>
  </data>
  <data name="_ConfirmationSubmit" xml:space="preserve">
    <value>Are you sure want to  submit this data?</value>
  </data>
  <data name="_CreateBy" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="_CreateDate" xml:space="preserve">
    <value>Created Date</value>
  </data>
  <data name="_CreateLOC" xml:space="preserve">
    <value>Create LOC</value>
    <comment>Create LOC</comment>
  </data>
  <data name="_CUnitId" xml:space="preserve">
    <value>Unit Id</value>
  </data>
  <data name="_CUnitTypeName" xml:space="preserve">
    <value>Unit Type</value>
  </data>
  <data name="_CUnitViewName" xml:space="preserve">
    <value>Unit View</value>
  </data>
  <data name="_Currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="_Dept" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="_DRefDate" xml:space="preserve">
    <value>Ref Date</value>
  </data>
  <data name="_FailedUpdate" xml:space="preserve">
    <value>Failed to update Process</value>
  </data>
  <data name="_Floor" xml:space="preserve">
    <value>Floor</value>
  </data>
  <data name="_FromRefNo" xml:space="preserve">
    <value>From Ref No</value>
  </data>
  <data name="_FromUnit" xml:space="preserve">
    <value>From Unit</value>
    <comment>From Unit</comment>
  </data>
  <data name="_FromUnitf" xml:space="preserve">
    <value />
  </data>
  <data name="_GrossSize" xml:space="preserve">
    <value>Gross Size</value>
    <comment>Gross Size</comment>
  </data>
  <data name="_NetSize" xml:space="preserve">
    <value>Net Size</value>
    <comment>Net Size</comment>
  </data>
  <data name="_NGrossAreaSize" xml:space="preserve">
    <value>Gross</value>
  </data>
  <data name="_NNetAreaSize" xml:space="preserve">
    <value>Net</value>
  </data>
  <data name="_Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="_Paid" xml:space="preserve">
    <value>Paid</value>
  </data>
  <data name="_PlanHODate" xml:space="preserve">
    <value>Plan HO Date</value>
  </data>
  <data name="_Prop" xml:space="preserve">
    <value>Property</value>
  </data>
  <data name="_Realese" xml:space="preserve">
    <value>Realese</value>
  </data>
  <data name="_Redraft" xml:space="preserve">
    <value>Redraft</value>
  </data>
  <data name="_RefDate" xml:space="preserve">
    <value>Ref Date</value>
  </data>
  <data name="_RefNo" xml:space="preserve">
    <value> Ref No</value>
  </data>
  <data name="_Salesman" xml:space="preserve">
    <value>Salesman</value>
  </data>
  <data name="_SellingPrice" xml:space="preserve">
    <value>Selling Price</value>
  </data>
  <data name="_Sold" xml:space="preserve">
    <value>Sold</value>
  </data>
  <data name="_Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="_Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="_SuccessMessageOfferRedraft" xml:space="preserve">
    <value>Data Redraft Successfully!</value>
  </data>
  <data name="_SuccessMessageOfferSubmit" xml:space="preserve">
    <value>Data Submitted Successfully!</value>
  </data>
  <data name="_Tax" xml:space="preserve">
    <value>Tax</value>
  </data>
  <data name="_Tenant" xml:space="preserve">
    <value>Tenant</value>
  </data>
  <data name="_ToUnit" xml:space="preserve">
    <value>To Unit</value>
  </data>
  <data name="_UnitId" xml:space="preserve">
    <value>Unit Id</value>
  </data>
  <data name="_UnitType" xml:space="preserve">
    <value>Unit Type</value>
  </data>
  <data name="_UpdatedBy" xml:space="preserve">
    <value>Updated By</value>
  </data>
  <data name="_UpdatedDate" xml:space="preserve">
    <value>Updated Date</value>
  </data>
  <data name="_View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="_ViewImage" xml:space="preserve">
    <value>View Image</value>
  </data>
</root>