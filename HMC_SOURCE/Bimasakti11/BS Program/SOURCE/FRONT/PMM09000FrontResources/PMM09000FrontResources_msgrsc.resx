<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Close_Confirmation" xml:space="preserve">
    <value>Are you sure want to Close this data?</value>
  </data>
  <data name="ReOpen_Confirmation" xml:space="preserve">
    <value>Are you sure want to Re-Open this data?</value>
  </data>
  <data name="ValidationAmortizationNo" xml:space="preserve">
    <value>Please input Amortization No</value>
  </data>
  <data name="ValidationBeforeCancel" xml:space="preserve">
    <value>You haven’t saved your changes. Are you sure want to cancel?</value>
    <comment>You haven’t saved your changes. Are you sure want to cancel?</comment>
  </data>
  <data name="ValidationBuilding" xml:space="preserve">
    <value>Please input Building</value>
  </data>
  <data name="ValidationCharge" xml:space="preserve">
    <value>Charge on grid is required</value>
  </data>
  <data name="ValidationChargeType" xml:space="preserve">
    <value>Charge Type is required</value>
  </data>
  <data name="ValidationCutOffPeriod" xml:space="preserve">
    <value />
  </data>
  <data name="ValidationDepartment" xml:space="preserve">
    <value>Please input Department</value>
  </data>
  <data name="ValidationDepartmentTransaction" xml:space="preserve">
    <value>Please input Department Transaction</value>
  </data>
  <data name="ValidationDeptHeader" xml:space="preserve">
    <value>Please Input LOI Department</value>
  </data>
  <data name="ValidationEndDate" xml:space="preserve">
    <value>Please input End Date</value>
  </data>
  <data name="ValidationEndDateGrid" xml:space="preserve">
    <value>End date on grid is required</value>
  </data>
  <data name="ValidationLOI" xml:space="preserve">
    <value>Please input LOI</value>
  </data>
  <data name="ValidationLOIDept" xml:space="preserve">
    <value>Please Input Department</value>
  </data>
  <data name="ValidationLOITenant" xml:space="preserve">
    <value>Please input Tenant</value>
  </data>
  <data name="ValidationRefNoHeader" xml:space="preserve">
    <value>Please Input LOI/Agreement No</value>
  </data>
  <data name="ValidationStartDate" xml:space="preserve">
    <value>Please input Start Date</value>
  </data>
  <data name="ValidationStartDateGrid" xml:space="preserve">
    <value>Start date on grid is required</value>
  </data>
  <data name="ValidationStartDateMoreThanEndDate" xml:space="preserve">
    <value>Start date must be equal or greater than End date</value>
  </data>
  <data name="ValidationTenant" xml:space="preserve">
    <value>Please input Tenant</value>
  </data>
  <data name="_AmortizationNo" xml:space="preserve">
    <value>Amortization No</value>
  </data>
  <data name="_Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="_Building" xml:space="preserve">
    <value>Building</value>
  </data>
  <data name="_Charge" xml:space="preserve">
    <value>Charge</value>
  </data>
  <data name="_ChargeAccrual" xml:space="preserve">
    <value>Charge Accrual</value>
  </data>
  <data name="_ChargeAmount" xml:space="preserve">
    <value>Charge Amount</value>
  </data>
  <data name="_ChargesId" xml:space="preserve">
    <value>Charges Id</value>
  </data>
  <data name="_ChargesName" xml:space="preserve">
    <value>Charges Name</value>
  </data>
  <data name="_ChargeType" xml:space="preserve">
    <value>Charge Type</value>
  </data>
  <data name="_Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="_ConfirmationCancel" xml:space="preserve">
    <value>You haven’t saved your changes. Are you sure want to cancel?</value>
  </data>
  <data name="_ConfirmationClose" xml:space="preserve">
    <value>Are you sure want to Close this Data?</value>
  </data>
  <data name="_ConfirmationReOpen" xml:space="preserve">
    <value>Are you sure want to Reopen this Data?</value>
  </data>
  <data name="_CreatedBy" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="_CreatedDate" xml:space="preserve">
    <value>Created Date</value>
  </data>
  <data name="_CutOffPeriod" xml:space="preserve">
    <value>Cut Off Period</value>
  </data>
  <data name="_DeptName" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="_DeptNameLOI" xml:space="preserve">
    <value>LOI Department</value>
  </data>
  <data name="_Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="_EndDate" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="_FailedUpdate" xml:space="preserve">
    <value>Failed to update Process</value>
  </data>
  <data name="_FailedUpdated" xml:space="preserve">
    <value>Failed to update this data!</value>
  </data>
  <data name="_InvoiceNo" xml:space="preserve">
    <value>Invoice No</value>
  </data>
  <data name="_labelOtherUnit" xml:space="preserve">
    <value>Other Unit</value>
    <comment>Other Unit</comment>
  </data>
  <data name="_labelUnit" xml:space="preserve">
    <value>Unit</value>
    <comment>Unit</comment>
  </data>
  <data name="_LOI_AgreementNo" xml:space="preserve">
    <value>LOI/AgreementNo</value>
  </data>
  <data name="_Period" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="_Prop" xml:space="preserve">
    <value>Property</value>
  </data>
  <data name="_RefNo" xml:space="preserve">
    <value>Ref No</value>
  </data>
  <data name="_ReOpen" xml:space="preserve">
    <value>ReOpen</value>
  </data>
  <data name="_SeqNo" xml:space="preserve">
    <value>Seq No</value>
  </data>
  <data name="_StartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="_StartMonth" xml:space="preserve">
    <value>Start Month</value>
  </data>
  <data name="_Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="_SuccessMessageClose" xml:space="preserve">
    <value>Close data Successfully!</value>
  </data>
  <data name="_SuccessMessageReOpen" xml:space="preserve">
    <value>Re-Open data Successfully!</value>
  </data>
  <data name="_TabAmortization" xml:space="preserve">
    <value>Amortization List</value>
  </data>
  <data name="_TabAmortizationEntry" xml:space="preserve">
    <value>Amortization Entry</value>
  </data>
  <data name="_Tenant" xml:space="preserve">
    <value>Tenant</value>
  </data>
  <data name="_TenantName" xml:space="preserve">
    <value>Tenant Name</value>
  </data>
  <data name="_TotalAmount" xml:space="preserve">
    <value>Total Amount</value>
  </data>
  <data name="_TransType" xml:space="preserve">
    <value>Transaction Type</value>
  </data>
  <data name="_UnitDesc" xml:space="preserve">
    <value>Unit Description</value>
  </data>
  <data name="_UpdateBy" xml:space="preserve">
    <value>Updated By</value>
  </data>
  <data name="_UpdDate" xml:space="preserve">
    <value>Updated Date</value>
  </data>
</root>